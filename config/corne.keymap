/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        TT: TT {
            compatible = "zmk,behavior-hold-tap";
            label = "TT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            retro-tap;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none             &to 0  &kp W     &kp E    &kp R                   &kp T              &kp Y  &kp U      &kp I    &kp O          &kp BACKSPACE  &none
&none             &kp A  &kp S     &kp D  &lt 1 F                   &kp G              &kp H  &kp J      &kp K    &kp L                &mt 0 P  &none
&none  &mt LEFT_SHIFT Z  &kp X     &kp C    &kp V                   &kp B              &kp N  &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT ENTER  &none
                                &kp LGUI    &to 1  &mt LEFT_CONTROL SPACE    &lt 1 RC(SPACE)  &mo 2   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp ESC  &trans  &trans  &trans  &trans     &kp LG(LEFT_BRACKET)    &kp N7  &kp UP_ARROW     &trans  &trans  &trans
&trans  &kp TAB  &trans  &trans  &trans  &trans    &kp LG(RIGHT_BRACKET)  &kp LEFT      &kp DOWN  &kp RIGHT  &trans  &trans
&trans   &trans  &trans  &trans  &trans  &trans            &kp LS(LG(H))    &trans        &trans     &trans  &trans  &trans
                         &trans  &trans  &trans                   &trans    &tog 0        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp ESC                    &kp EXCL                                  &kp AT                        &kp HASH         &kp DOLLAR    &kp EQUAL  &kp KP_NUMBER_7  &kp KP_NUMBER_8         &kp KP_NUMBER_9               &trans  &trans
&trans  &kp TAB  &TT LEFT_BRACE RIGHT_BRACE  &TT LEFT_PARENTHESIS RIGHT_PARENTHESIS  &TT LEFT_BRACKET RIGHT_BRACKET  &TT LS(SEMI) SEMI    &kp MINUS  &kp KP_NUMBER_4  &kp KP_NUMBER_5         &kp KP_NUMBER_6  &TT SLASH BACKSLASH  &trans
&trans   &trans                 &kp PERCENT                               &kp CARET                        &kp AMPS          &kp ASTRK    &kp KP_N0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &TT KP_NUMBER_3 PERIOD               &trans  &trans
                                                                             &trans                       &kp GRAVE     &kp LEFT_SHIFT       &trans           &trans           &trans
            >;
        };
    };
};
